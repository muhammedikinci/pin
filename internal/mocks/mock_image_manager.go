// Code generated by MockGen. DO NOT EDIT.
// Source: image_manager.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageManager is a mock of ImageManager interface.
type MockImageManager struct {
	ctrl     *gomock.Controller
	recorder *MockImageManagerMockRecorder
}

// MockImageManagerMockRecorder is the mock recorder for MockImageManager.
type MockImageManagerMockRecorder struct {
	mock *MockImageManager
}

// NewMockImageManager creates a new mock instance.
func NewMockImageManager(ctrl *gomock.Controller) *MockImageManager {
	mock := &MockImageManager{ctrl: ctrl}
	mock.recorder = &MockImageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageManager) EXPECT() *MockImageManagerMockRecorder {
	return m.recorder
}

// CheckTheImageAvailable mocks base method.
func (m *MockImageManager) CheckTheImageAvailable(ctx context.Context, image string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckTheImageAvailable", ctx, image)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckTheImageAvailable indicates an expected call of CheckTheImageAvailable.
func (mr *MockImageManagerMockRecorder) CheckTheImageAvailable(ctx, image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckTheImageAvailable", reflect.TypeOf((*MockImageManager)(nil).CheckTheImageAvailable), ctx, image)
}

// PullImage mocks base method.
func (m *MockImageManager) PullImage(ctx context.Context, image string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PullImage", ctx, image)
	ret0, _ := ret[0].(error)
	return ret0
}

// PullImage indicates an expected call of PullImage.
func (mr *MockImageManagerMockRecorder) PullImage(ctx, image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullImage", reflect.TypeOf((*MockImageManager)(nil).PullImage), ctx, image)
}
